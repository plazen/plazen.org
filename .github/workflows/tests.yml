name: 🧪 Test Suite

on:
  push:
    branches: [main, next, develop]
  pull_request:
    branches: [main, next, develop]
  workflow_dispatch:

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Generate Prisma client
        run: npm run prisma:generate

      - name: 🧪 Run unit tests
        run: npm run test -- --testPathPattern="(components|utils|lib)" --coverage

      - name: 🧪 Run API tests
        run: npm run test -- --testPathPattern="api" --coverage

      - name: 🧪 Run integration tests
        run: npm run test -- --testPathPattern="integration|userJourneys" --coverage

      - name: 📊 Generate coverage report
        run: npm run test:coverage

  lint:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Generate Prisma client
        run: npm run prisma:generate

      - name: � Run ESLint
        run: npm run lint

      - name: 🔷 Type check
        run: npx tsc --noEmit

  build:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Generate Prisma client
        run: npm run prisma:generate

      - name: 🏗️ Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: "http://localhost:54321"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "test-key"
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"

  security:
    name: 🔒 Security Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🔒 Run security audit
        run: npm audit --audit-level=moderate || true

      - name: 📦 Check dependencies
        run: npm outdated || true
